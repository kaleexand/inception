#### Настройка нашего мини сетевого окружения
# Работает наподобии DNS

### services -> Тут прописываем рахличные параметры
### container name -> Название контейнера
### build -> путь к папке с Dockerfile    (можно указать image: и он будет искать докер образ на машине пото на Dockerhub)
### volumes -> путь которы смотнируем с нашей машины и с сетью
### networks -> название сети в которой будем работаь
### depends_on -> устанавдиваем зависимости контейнеров (например wordpress устанавдиваем после БД)
### ports -> для вытаскивания наружу (HOST: CONTAINER)
### expose -> Открывайте порты, не публикуя их на хост-машине - они будут доступны только для связанных сервисов. Можно указать только внутренний порт.
### enviroment -> .env файл берет оттуда переменные окружения (из файла доступны только в docker file но не в контейнерах) и потом указываем что в контейнерах доступно


version: "3.9"
services:
  nginx:
    container_name: nginx
    ports:
      - "443:443"
    build: ./requirements/nginx
    volumes:
      - wp:/var/www/wordpress
    depends_on:
      - wordpress
    networks:
      - kalexand

  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    volumes:
      - wp:/var/www/wordpress
    depends_on:
      - mariadb
    networks:
      - kalexand
    env_file: .env  

  mariadb:
    container_name: mariadb
    build: ./requirements/mysql
    volumes:
      - db:/var/lib/mysql
    networks:
      - kalexand
    env_file: .env

  adminer:
    container_name: adminer
    build: ./requirements/bonus/adminer
    networks:
      - kalexand
    ports:
      - "8080:8080"

  cv:
    build: ./requirements/bonus/cv
    container_name: cv
    ports:
      - "8081:8081"
    networks:
       - kalexand
    restart: always

volumes:
  db:
    name: db
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USERNAME}/data/db
  wp:
    name: wp
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USERNAME}/data/wp

networks:
  kalexand:
    driver: bridge
